{"version":3,"sources":["components/AgregarCategoria.js","helpers/getGifs.js","components/GifItem.js","components/Gif.js","hooks/useFechGifs.js","GifApp.js","index.js"],"names":["AgregarCategoria","setCategorias","useState","input","setInput","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","res","json","data","gifs","map","dat","id","title","images","downsized_medium","GrifItem","console","log","className","src","alt","Gif","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","key","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"6LAiCeA,EA7BU,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAChBC,mBAAS,IADO,mBACnCC,EADmC,KAC5BC,EAD4B,KAc1C,OAEI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAMK,OAAOC,OAAO,IACvBR,GAAc,SAAAS,GAAC,OAAKP,GAAL,mBAAeO,OAC9BN,EAAS,OAOL,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAjBK,SAACP,GACdF,EAASE,EAAEQ,OAAOF,Y,uBCPbG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACH,mCACVC,EAFa,iDAEmCC,UAAUH,GAF7C,6BACH,oCADG,SAGDI,MAAMF,GAHL,cAGbG,EAHa,gBAIIA,EAAIC,OAJR,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCYLO,EAXE,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAG3B,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAGnB,yBAAKgB,UAAU,8CACX,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,KCgBDS,EAlBH,SAAC,GAAmB,IAAjBrB,EAAgB,EAAhBA,UAAgB,ECHH,SAACA,GAAe,IAAD,EACbd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAevC,OATAC,qBAAU,WACN1B,EAAQC,GAAW0B,MAAK,SAAAC,GACpBH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGlB,CAACtB,IAEGuB,EDXyBK,CAAa5B,GAArCsB,EADmB,EACnBA,QAAeK,EADI,EACVpB,KAEjB,OACI,oCACI,wBAAIW,UAAU,yCAAyClB,GACtDsB,GAAY,uBAAGJ,UAAU,oCAAb,iBACb,yBAAKA,UAAU,aAENS,EAAKlB,KAAI,SAAAoB,GAAG,OACT,kBAAC,EAAD,eAAUC,IAAKD,EAAIlB,IAAQkB,UEZtCE,EAAe,WAAO,IAAD,EAEM7C,mBAAS,CAAC,SAFhB,mBAEvB8C,EAFuB,KAEX/C,EAFW,KAM9B,OACI,6BACI,uCACA,kBAAC,EAAD,CAAkBA,cAAeA,EAAe+C,WAAYA,IAC5D,6BAGA,4BACKA,EAAWvB,KAAI,SAAAT,GAAS,OACrB,kBAAC,EAAD,CAAK8B,IAAK9B,EAAWA,UAAWA,UCZpDiC,IAASC,OAEP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.7a814b4b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst AgregarCategoria = ({setCategorias}) => {\n    const [input, setInput] = useState('');\n\n    const onChange = (e) => {\n        setInput(e.target.value);\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(input.trim().length>2){\n        setCategorias(c => [input, ...c]);\n        setInput('');\n        }\n    }\n\n    return (\n\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={input}\n                onChange={onChange}\n            />\n        </form>\n    );\n}\nAgregarCategoria.propTypes ={\n    setCategorias: PropTypes.func.isRequired,\n}\n\nexport default AgregarCategoria;","\nexport const getGifs = async (categoria) => {\n    const api_key = '3D2krRdLMx5YttGcdcVwMcDPzcsOAyKl';\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=${api_key}`;\n    const res = await fetch(url);\n    const { data } = await res.json();\n\n    const gifs = data.map(dat => {\n        return {\n            id: dat.id,\n            title: dat.title,\n            url: dat.images?.downsized_medium.url,\n        }\n    })\n\n    return(gifs);\n}","import React from 'react';\n\nconst GrifItem = ({ id, title, url }) => {\n    console.log(id, title, url);\n\n    return (\n        <div className=\"card animate__animated animate__backInDown\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    );\n}\n\nexport default GrifItem;","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFechGifs';\nimport GrifItem from './GifItem';\n\n\n\nconst Gif = ({ categoria }) => {\n    const { loading, data: imgs } = useFetchGifs(categoria);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__backInDown\">{categoria}</h3>\n            {loading && (<p className=\"animate__animated animate__flash\">Loading .....</p>)}\n            <div className=\"card-grid\">\n                \n                    {imgs.map(img => (\n                        <GrifItem key={img.id} {...img} />\n                    ))}\n                \n            </div>\n        </>\n    );\n}\n\nexport default Gif;","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (categoria) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect(() => {\n        getGifs(categoria).then(imgs => {\n            setState({\n                data: imgs,\n                loading: false\n            })\n        })\n    }, [categoria]);\n\n    return state;\n\n}\n\n","import React, { useState } from 'react'\nimport AgregarCategoria from './components/AgregarCategoria';\nimport Gif from './components/Gif';\n\nexport const GifExpertApp = () => {\n\n    const [categorias, setCategorias] = useState(['Dark']);\n\n\n\n    return (\n        <div>\n            <h2>GiffAPP</h2>\n            <AgregarCategoria setCategorias={setCategorias} categorias={categorias}/>\n            <hr />\n\n            {/* <button onClick={handleAdd}> Agregar</button> */}\n            <ol>\n                {categorias.map(categoria => (\n                    <Gif key={categoria} categoria={categoria}/>\n                ))}\n            </ol>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifApp';\n\n\n\nReactDOM.render(\n\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}